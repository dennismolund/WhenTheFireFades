@model Web.ViewModels.LobbyViewModel

@{
    ViewData["Title"] = "Game Lobby";
}

<div class="container">
    <h1>Game Lobby</h1>
    <h2>Code: @Model.ConnectionCode</h2>

    <div class="row">
        <div class="col-md-8">
            <h3>Players (<span id="playerCount">@Model.PlayerCount</span>)</h3>
            <div id="playersList" class="list-group">
                @foreach (var player in Model.GamePlayers)
                {
                    <div class="list-group-item d-flex justify-content-between align-items-center"
                         data-player-id="@player.TempUserId">
                        <div>
                            <strong>@player.Nickname</strong>
                            <span class="badge bg-secondary">Seat @player.Seat</span>
                        </div>
                    </div>
                }
            </div>
        </div>

        <div class="col-md-4">
            @if (Model.IsLeader)
            {
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Start Game</h5>
                        <form asp-controller="game" asp-action="StartGame" method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="code" value="@Model.ConnectionCode">
                            <button id="startBtn" class="btn btn-success w-100" disabled>
                                Start Game
                            </button>
                        </form>
                    </div>
                </div>
            }
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Leave</h5>
                    <form asp-controller="game" asp-action="LeaveGameLobby" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="code" value="@Model.ConnectionCode">
                        <button id="leaveBtn" class="btn btn-danger w-100">
                            Leave Lobby
                        </button>
                    </form>
                </div>
            </div>
        </div>

    </div>
</div>

@section Scripts {
    <script src="~/js/signalr/dist/browser/signalr.js"></script>
    <script>
        const gameCode = '@Model.ConnectionCode';
        const tempUserId = @ViewBag.TempUserId;
        const startBtn = document.getElementById('startBtn');

        // Create connection to SignalR hub
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/gameHub")
            .withAutomaticReconnect()
            .build();

        connection.on("PlayerJoined", function (data) {
            console.log("Player joined:", data);
            updatePlayersList(data.players);
            updatePlayerCount(data.totalPlayers);
            updateStartBtnUI(data.totalPlayers);
        });

        connection.on("PlayerLeft", function (data) {
            console.log("Player left:", data);
            updatePlayersList(data.players);
            updatePlayerCount(data.totalPlayers);
            updateStartBtnUI(data.totalPlayers);
        });
        
        // Start game
        connection.on("GameStarted", function (data) {
            console.log("Game started!", data);
            const redirectUrl = `/Game/Play?code=${data.code}`;
            console.log("Redirecting to:", redirectUrl);
            window.location.href = redirectUrl;
        });

        connection.start()
            .then(function () {
                console.log("Connected to SignalR hub");
                return connection.invoke("JoinGameLobby", gameCode);
            })
            .catch(function (err) {
                console.error("Error connecting to SignalR:", err);
            });
        

        // Update the players list in the UI
        function updatePlayersList(players) {
            const playersList = document.getElementById("playersList");
            playersList.innerHTML = "";

            players.forEach(function(player) {
                const playerDiv = document.createElement("div");
                playerDiv.className = "list-group-item d-flex justify-content-between align-items-center";
                playerDiv.setAttribute("data-player-id", player.tempUserId);

                playerDiv.innerHTML = `
                    <div>
                        <strong>${player.nickname}</strong>
                        <span class="badge bg-secondary">Seat ${player.seat}</span>
                    </div>
                `;

                playersList.appendChild(playerDiv);
            });
        }

        // Update player count
        function updatePlayerCount(count) {
            document.getElementById("playerCount").textContent = count;
        }
        
        function updateStartBtnUI(count) {
            startBtn.disabled = count < 2; //Ändra till 5 i production
        }

    </script>
}